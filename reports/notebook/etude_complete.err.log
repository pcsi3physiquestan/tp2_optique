Traceback (most recent call last):
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\clacpatia\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
"""
On importe pour vous les biblioth√®ques scientifiques utiles.
"""
import numpy as np
import numpy.random as rd
import matplotlib.pyplot as plt


"""
Commencer par entrer les r√©sultats de mesurage pour les trois mesurandes directes
"""
x1_mes = 0  # Commentaire √† remplacer par la descritpion de x1
x2_mes = 0  # Commentaire √† remplacer par la descritpion de x2
x3_mes = 0  # Commentaire √† remplacer par la descritpion de x3


"""
Pour chaque source d'incertitude cr√©er une ligne ou vous entrez la valeur de de la demi-largeur de la distribution uniforme.
"""
# Sources d'incertitudes pour x1
x1_d1 = 0  # D√©crire ici la source d'incertitude associ√©e
x1_d2 = 0  # D√©crire ici la source d'incertitude associ√©e

# Sources d'incertitudes pour x2



# Sources d'incertitudes pour x3



"""
Choisir le nombre de simulations
"""
N = 100000

"""
Cr√©er les √©chantillons simul√©s des mesurandes x1, x2, x3
(ne pas oublier le r√©sultat de mesurage).
On rappelle que pour un tirage de N valeurs suivant une loi uniforme centr√©e en 0 et de demi-largeur dt, la fonction est 
rd.uniform(-dt, dt, N)

Cr√©er ensuite les √©chantillons simul√©s de OA, OA' puis f'.
"""
x1_sim = x1_m + rd.uniform(-x1_d1, x1_d1, N) + rd.uniform(-x1_d2, x1_d2, N)
x2_sim = 0
x3_sim = 0
OA_sim = 0
OA1_sim = 0
f1_sim = 0

"""
On affiche pour vous les r√©sultats pour chaque grandeur
"""
print("R√©sultat de mesurage pour x1 (sans unit√©s) : " + str(x1_mes))
print("R√©sultat de mesurage pour u(x1) (sans unit√©s) : " + str(np.std(x1_sim, ddof=1)))

print("R√©sultat de mesurage pour x2 (sans unit√©s) : " + str(x2_mes))
print("R√©sultat de mesurage pour u(x2) (sans unit√©s) : " + str(np.std(x2_sim, ddof=1)))

print("R√©sultat de mesurage pour x3 (sans unit√©s) : " + str(x3_mes))
print("R√©sultat de mesurage pour u(x3) (sans unit√©s) : " + str(np.std(x3_sim, ddof=1)))

print("R√©sultat de mesurage pour OA (sans unit√©s) : " + str(x1_mes - x2_mes)
print("R√©sultat de mesurage pour u(OA) (sans unit√©s) : " + str(np.std(OA_sim, ddof=1)))

print("R√©sultat de mesurage pour OA1 (sans unit√©s) : " + str(x3_mes - x2_mes))
print("R√©sultat de mesurage pour u(OA1) (sans unit√©s) : " + str(np.std(OA1_sim, ddof=1)))


"""
Repr√©senter graphiquement l'histogramme des valeurs simul√©es.
On donne le squelette pour le trac√© du graphique. Ajouter/modifier les instructions.
"""
f, ax = plt.subplots()
f.suptitle("Simulation de Monte-Carlo pour f'")
ax.set_xlabel("")  # Ajouter une l√©gende aux abscisses (grandeur et unit√©)

# Mettre ici l'instruction tra√ßant l'histogramme des valeurs.

plt.show()

"""
Calculer et afficher le r√©sultat de mesurage de f' et son incertitude-type.
"""

f1 = 0  # Entrer la formule ad√©quate pour le calcul de f'
f1_u = 0  # Entrer la formule ad√©quate pour le calcul de l'incertitude sur f'

print("R√©sultat de mesurage : " + str(f1))
print("Incertitude-type : " + str(f1_u))
------------------

[1;36m  Cell [1;32mIn[1], line 64[1;36m[0m
[1;33m    print("R√©sultat de mesurage pour OA (sans unit√©s) : " + str(x1_mes - x2_mes)[0m
[1;37m         ^[0m
[1;31mSyntaxError[0m[1;31m:[0m '(' was never closed

SyntaxError: '(' was never closed (1390432851.py, line 64)

